{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Desktop\\\\complete chinese shopping app\\\\complete-shopping-react-hooks - for-stripe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Homepage from './pages/Homepage';\nimport ShopPage from './pages/ShopPage';\nimport Header from './components/Header';\nimport SignInAndSignUpPage from './components/sign-in and sign-up';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'; //import {auth, createUserProfileDocument,addCollectionAndItem} from './firebase/firebase.utils'\n\nimport { connect } from 'react-redux';\nimport { setcurrentuser } from './redux/user/user-actions';\nimport { selectCurrentUser } from './redux/user/user-selector';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutPage from './pages/CheckoutPage';\nimport { checkUserSession } from './redux/user/user-actions'; //import { selectCollectionsforPreview } from './redux/shop/shop-selector';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  _s();\n\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]); //unsubscribeFromAuth = null\n  //componentDidMount(){\n  //  const {checkUserSession} = this.props\n  //  checkUserSession()\n  //     const {setcurrentuser,collectionsArray} = this.props\n  // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //   if(userAuth){ //if exists\n  //     const userRef = await createUserProfileDocument(userAuth)\n  //     userRef.onSnapshot(snapshot=>{\n  //       //console.log(snapshot.data());\n  //       setcurrentuser({\n  //           id:snapshot.id,\n  //           ...snapshot.data()\n  //       })\n  //,()=>{\n  //   console.log(this.state);\n  // }\n  //    // console.log(this.state);\n  //   })\n  // }\n  //console.log(user);\n  // else{\n  //   setcurrentuser(userAuth)\n  //addCollectionAndItem('collections',collectionsArray);\n  //this addcollectionanditem is added only once to the firebase as it gets mounted \n  // addCollectionAndItem('collections',\n  // collectionsArray.map(({title,items})=>({\n  //   title,\n  //   items\n  // })))\n  //   }\n  // })\n  // componentWillUnmount(){\n  //   this.unsubscribeFromAuth()\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Homepage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/shop\",\n        component: ShopPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/checkout\",\n        component: CheckoutPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        render: () => currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUpPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}; // const mapStateToProps = ({user}) =>({\n//   currentUser:user.currentUser\n// }) \n\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser //collectionsArray: selectCollectionsforPreview\n\n}); // const mapDispatchToProps = dispatch =>({\n//   setcurrentuser: user=> dispatch(setcurrentuser(user))\n// })\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/complete chinese shopping app/complete-shopping-react-hooks - for-stripe/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","Homepage","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","connect","setcurrentuser","selectCurrentUser","createStructuredSelector","CheckoutPage","checkUserSession","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAgBC,KAAhB,EAAsBC,QAAtB,QAAsC,kBAAtC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,SAAQC,IAAR,EACEC,yBADF,QACmC,2BADnC,C,CAGE;;AAEF,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,gBAAT,QAAiC,2BAAjC,C,CACA;;;;AAEA,MAAMC,GAAG,GAAE,CAAC;AAACD,EAAAA,gBAAD;AAAkBE,EAAAA;AAAlB,CAAD,KAAkC;AAAA;;AAE3CjB,EAAAA,SAAS,CAAC,MAAI;AACZe,IAAAA,gBAAgB;AACjB,GAFQ,EAEP,CAACA,gBAAD,CAFO,CAAT,CAF2C,CAK3C;AAEA;AAEE;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACM;AACA;AACA;AACJ;AACA;AACA;AACD;AACC;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AAGF;AACA;AACA;;AAGE,sBACE;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEX;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAA8B,QAAA,SAAS,EAAES;AAAzC;AAAA;AAAA;AAAA;AAAA,cALF,eAOE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AACA,QAAA,MAAM,EAAE,MAAIG,WAAW,gBACvB,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADuB,gBAErB,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtEH,C,CAyEA;AACA;AACA;;;GA3EMD,G;;KAAAA,G;AA6EN,MAAME,eAAe,GAAGL,wBAAwB,CAAC;AAC/CI,EAAAA,WAAW,EAACL,iBADmC,CAE/C;;AAF+C,CAAD,CAAhD,C,CAKA;AACA;AACA;;AAEA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAI;AACrCL,EAAAA,gBAAgB,EAAC,MAAIK,QAAQ,CAACL,gBAAgB,EAAjB;AADQ,CAAJ,CAAnC;;AAKA,eAAeL,OAAO,CAACQ,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CH,GAA5C,CAAf","sourcesContent":["import React,{useEffect} from 'react'\nimport './App.css'\nimport { Switch,Route,Redirect } from 'react-router-dom';\nimport Homepage from './pages/Homepage';\nimport ShopPage from './pages/ShopPage';\nimport Header from './components/Header';\nimport SignInAndSignUpPage from './components/sign-in and sign-up';\nimport {auth, \n  createUserProfileDocument,} from './firebase/firebase.utils'\n\n  //import {auth, createUserProfileDocument,addCollectionAndItem} from './firebase/firebase.utils'\n\nimport {connect} from 'react-redux'\nimport {setcurrentuser} from './redux/user/user-actions'\nimport { selectCurrentUser } from './redux/user/user-selector'\nimport { createStructuredSelector } from 'reselect'\nimport CheckoutPage from './pages/CheckoutPage'\nimport { checkUserSession } from './redux/user/user-actions'; \n//import { selectCollectionsforPreview } from './redux/shop/shop-selector';\n\nconst App =({checkUserSession,currentUser})=>{\n  \n  useEffect(()=>{\n    checkUserSession()\n  },[checkUserSession])\n  //unsubscribeFromAuth = null\n\n  //componentDidMount(){\n\n    //  const {checkUserSession} = this.props\n    //  checkUserSession()\n    //     const {setcurrentuser,collectionsArray} = this.props\n\n\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //   if(userAuth){ //if exists\n    //     const userRef = await createUserProfileDocument(userAuth)\n\n    //     userRef.onSnapshot(snapshot=>{\n    //       //console.log(snapshot.data());\n    //       setcurrentuser({\n    //           id:snapshot.id,\n    //           ...snapshot.data()\n    //       })\n          //,()=>{\n          //   console.log(this.state);\n          // }\n      //    // console.log(this.state);\n      //   })\n      // }\n     //console.log(user);\n      // else{\n      //   setcurrentuser(userAuth)\n        //addCollectionAndItem('collections',collectionsArray);\n        //this addcollectionanditem is added only once to the firebase as it gets mounted \n        // addCollectionAndItem('collections',\n        // collectionsArray.map(({title,items})=>({\n        //   title,\n        //   items\n        // })))\n    //   }\n    // })\n  \n\n  // componentWillUnmount(){\n  //   this.unsubscribeFromAuth()\n  // }\n\n\n    return(\n      <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Homepage}></Route>\n\n        <Route path=\"/shop\" component={ShopPage}></Route>\n\n        <Route exact path=\"/checkout\" component={CheckoutPage}></Route>\n\n        <Route exact path=\"/signin\" \n        render={()=>currentUser ? \n        <Redirect to=\"/\" />\n        : <SignInAndSignUpPage />}>\n        </Route>\n\n\n\n    </Switch>\n    </div>\n    )\n  }\n\n\n// const mapStateToProps = ({user}) =>({\n//   currentUser:user.currentUser\n// }) \n\nconst mapStateToProps = createStructuredSelector({\n  currentUser:selectCurrentUser,\n  //collectionsArray: selectCollectionsforPreview\n})\n\n// const mapDispatchToProps = dispatch =>({\n//   setcurrentuser: user=> dispatch(setcurrentuser(user))\n// })\n\nconst mapDispatchToProps = dispatch =>({\n  checkUserSession:()=>dispatch(checkUserSession())\n})\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}